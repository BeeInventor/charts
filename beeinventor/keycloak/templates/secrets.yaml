{{- if and (not .Values.auth.existingSecret) (not .Values.auth.existingSecretPerPassword) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.secrets.name" (dict "existingSecret" .Values.auth.existingSecret "context" $) }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if .Values.auth.adminPassword }}
  admin-password: {{ .Values.auth.adminPassword | b64enc | quote }}
  {{- else }}
  admin-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- if .Values.auth.managementPassword }}
  management-password: {{ .Values.auth.managementPassword | b64enc | quote }}
  {{- else }}
  management-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{- end }}
  {{- if (not .Values.externalDatabase.existingSecret) }}
  database-password: {{ include "keycloak.databaseEncryptedPassword" . }}
  {{- end }}
  {{- if .Values.auth.tls.enabled }}
  {{- if or .Values.auth.tls.keystorePassword .Values.auth.tls.autoGenerated }}
  tls-keystore-password: {{ (.Values.auth.tls.keystorePassword | default (randAlphaNum 10)) | b64enc | quote }}
  {{- end }}
  {{- if or .Values.auth.tls.truststorePassword .Values.auth.tls.autoGenerated }}
  tls-truestore-password: {{ (.Values.auth.tls.truststorePassword | default (randAlphaNum 10)) | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}
